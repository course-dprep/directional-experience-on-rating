title_ratings <- readr::read_tsv("data/data_raw/title.ratings.tsv")
setwd("~/Marketing Analytics/DataPrep/dPrep_imdb/imdb_team_10/team-project-team-10")
title_ratings <- readr::read_tsv("data/data_raw/title.ratings.tsv")
title_ratings <- readr::read_tsv("data/raw_data/title.ratings.tsv")
title_crew <- readr::read_tsv("data/raw_data/title.crew.tsv")
name_basics <- readr::read_tsv("data/raw_data/name.basics.tsv")
title_basics <- readr::read_tsv("data/raw_data/title.basics.tsv")
# Filter movie titles
title_basics <- readr::read_tsv("data/raw_data/title.basics.tsv") %>%
filter(titleType == "movie") %>%
select(tconst, runtimeMinutes, genres)
# This makefile will be used to automate the
load_pkg <- function(pkg){
if(!require(pkg, character.only = TRUE)){
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
}
packages <- c("readr", "tidyverse", "tidyr", "dplyr", "tinytex", "rmarkdown")
lapply(packages, load_pkg)
# Load raw data
title_ratings <- readr::read_tsv("data/raw_data/title.ratings.tsv")
title_crew <- readr::read_tsv("data/raw_data/title.crew.tsv")
name_basics <- readr::read_tsv("data/raw_data/name.basics.tsv")
# Filter movie titles
title_basics <- readr::read_tsv("data/raw_data/title.basics.tsv") %>%
filter(titleType == "movie") %>%
select(tconst, runtimeMinutes, genres)
view(title_basics)
view(title_basics)
# Gefilterde data opslaan in data/processed
readr::write_csv(title_basics, "data/processed/title_basics_filtered.csv")
# This script will be used to populate the \data directory
# with all necessary raw data files.
# This makefile will be used to automate the
load_pkg <- function(pkg){
if(!require(pkg, character.only = TRUE)){
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
}
packages <- c("readr", "tidyverse", "tidyr", "dplyr", "tinytex", "rmarkdown")
lapply(packages, load_pkg)
# Load raw data
title_ratings <- readr::read_tsv("data/raw_data/title.ratings.tsv")
title_crew <- readr::read_tsv("data/raw_data/title.crew.tsv")
name_basics <- readr::read_tsv("data/raw_data/name.basics.tsv")
# Filter movie titles
title_basics <- readr::read_tsv("data/raw_data/title.basics.tsv") %>%
filter(titleType == "movie") %>%
select(tconst, runtimeMinutes, genres)
View(title_basics)
View(name_basics)
View(title_basics)
View(title_crew)
View(name_basics)
View(title_basics)
View(title_crew)
View(title_ratings)
View(title_crew)
View(title_basics)
View(title_basics)
View(title_crew)
View(title_ratings)
View(title_basics)
title_ratings_movies <- title_ratings %>%
semi_join(title_basics, by = "tconst")
View(title_ratings_movies)
View(title_ratings_movies)
View(title_ratings)
View(title_basics)
View(title_ratings_movies)
View(title_basics)
View(name_basics)
View(title_basics)
View(title_crew)
View(name_basics)
View(title_crew)
View(name_basics)
View(title_basics)
View(title_crew)
View(title_ratings_movies)
View(name_basics)
View(title_ratings_movies)
View(title_ratings_movies)
View(title_crew)
View(title_crew)
View(title_basics)
View(title_basics)
View(title_basics)
View(title_ratings_movies)
View(title_ratings)
View(title_ratings_movies)
View(title_crew)
title_crew_movies <- title_movies %>%
semi_join(title_basics, by = "tconst")
title_crew_movies <- title_crew %>%
semi_join(title_basics, by = "tconst")
View(title_crew_movies)
View(name_basics)
View(name_basics)
head(name_basics)
View(title_crew)
View(title_crew_movies)
View(title_crew)
View(title_crew_movies)
View(title_crew)
View(title_crew_movies)
name_basics_movies <- name_basics %>%
semi_join(title_crew_movies, by = "nconst")
name_basics_movies <- name_basics %>%
semi_join(title_crew_movies, by = "directors")
View(name_basics)
View(name_basics)
View(title_crew)
View(name_basics)
# Merge into one dataframe
imdb_movies <- title_basics %>%
left_join(title_ratings_movies, by = "tconst") %>%
left_join(title_crew_movies, by = "tconst")
View(imdb_movies)
View(imdb_movies)
View(name_basics)
# Save as csv
readr::write_csv(imdb_movies, "data/processed/imdb_movies_dataset.csv")
readr::write_csv(imdb_movies, "data/imdb_movies_dataset.csv")
